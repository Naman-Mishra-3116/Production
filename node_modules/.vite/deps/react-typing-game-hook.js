import {
  require_react
} from "./chunk-4HAMFFQC.js";
import {
  __commonJS
} from "./chunk-EQCVQC35.js";

// node_modules/react-typing-game-hook/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-typing-game-hook/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var r = require_react();
    var e = function() {
      return e = Object.assign || function(r2) {
        for (var e2, t2 = 1, a2 = arguments.length; t2 < a2; t2++) for (var n2 in e2 = arguments[t2]) Object.prototype.hasOwnProperty.call(e2, n2) && (r2[n2] = e2[n2]);
        return r2;
      }, e.apply(this, arguments);
    };
    function t(r2, e2) {
      for (var t2 = 0, a2 = e2.length, n2 = r2.length; t2 < a2; t2++, n2++) r2[n2] = e2[t2];
      return r2;
    }
    var a;
    !function(r2) {
      r2._ONTEXTCHANGE = "INTERNAL/ONTEXTCHANGE", r2.RESET = "RESET", r2.END = "END", r2.TYPINGINSERT = "TYPING/INSERT", r2.TYPINGDELETE = "TYPING/DELETE", r2.SETCURRENTINDEX = "SET/CURRENTINDEX";
    }(a || (a = {}));
    var n = { NotStarted: 0, Started: 1, Ended: 2 };
    var u = function(r2, n2) {
      switch (n2.type) {
        case a.SETCURRENTINDEX:
          return function(r3, t2) {
            var a2, n3 = r3.chars, u2 = r3.length, c = null !== (a2 = t2.payload) && void 0 !== a2 ? a2 : null;
            return c && "number" == typeof c && c >= -1 && c < u2 ? e(e({}, r3), { currIndex: c, currChar: n3[c] }) : r3;
          }(r2, n2);
        case a.RESET:
          return function(r3) {
            var t2 = r3.chars;
            return e(e({}, r3), { startTime: null, endTime: null, charsState: new Array(t2.length).fill(0), currIndex: -1, currChar: "", correctChar: 0, errorChar: 0, phase: 0 });
          }(r2);
        case a.END:
          return function(r3) {
            return e(e({}, r3), { phase: 2, endTime: (/* @__PURE__ */ new Date()).getTime() });
          }(r2);
        case a.TYPINGINSERT:
          return function(r3, a2) {
            var n3, u2 = r3.startTime, c = r3.endTime, o = r3.chars, s = r3.charsState, i = r3.length, l = r3.currIndex, T = r3.correctChar, E = r3.errorChar, h = r3.phase, p = r3.skipCurrentWordOnSpace, d = r3.pauseOnError, f = r3.countErrors, C = null !== (n3 = a2.payload) && void 0 !== n3 ? n3 : null, N = u2, y = c;
            if (2 === h) return r3;
            0 === h && (h = 1, N = (/* @__PURE__ */ new Date()).getTime());
            var v = t([], s);
            if (" " === C && " " !== o[l + 1] && p) {
              var I = o.indexOf(C, l);
              l = -1 === I ? i - 1 : I;
            } else null !== C ? o[l + 1] !== C ? (2 == v[l + 1] ? "everytime" === f && (E += 1) : (v[l + 1] = 2, E += 1), d || (l += 1)) : (2 === v[l + 1] && d && "once" === f && (E -= 1), v[l + 1] = 1, T += 1, l += 1) : l += 1;
            l >= i - 1 && (y = (/* @__PURE__ */ new Date()).getTime(), h = 2);
            var m = l >= 0 ? o[l] : "";
            return e(e({}, r3), { charsState: v, errorChar: E, correctChar: T, currIndex: l, currChar: m, phase: h, startTime: N, endTime: y });
          }(r2, n2);
        case a.TYPINGDELETE:
          return function(r3, a2) {
            var n3, u2 = r3.chars, c = r3.charsState, o = r3.currIndex, s = r3.correctChar, i = r3.errorChar, l = r3.phase, T = r3.countErrors, E = null !== (n3 = a2.payload) && void 0 !== n3 ? n3 : null;
            if (1 !== l || -1 === o) return r3;
            var h = t([], c);
            if (E) {
              var p = u2.lastIndexOf(" ", o);
              p = -1 === p ? 0 : p + 1;
              for (var d = o; d >= p; d--) 1 === h[d] ? s -= 1 : 2 === h[d] && "once" === T && (i -= 1), h[d] = 0;
              o = p;
            } else 1 === h[o] ? s -= 1 : 2 === h[o] && "once" === T && (i -= 1), h[o] = 0;
            -1 !== o && (o -= 1);
            var f = o >= 0 ? u2[o] : "";
            return e(e({}, r3), { currIndex: o, currChar: f, charsState: h, correctChar: s, errorChar: i });
          }(r2, n2);
        case a._ONTEXTCHANGE:
          return n2.payload;
        default:
          return r2;
      }
    };
    exports.CharStateType = { Incomplete: 0, Correct: 1, Incorrect: 2 }, exports.PhaseType = n, exports.default = function(t2, c) {
      void 0 === t2 && (t2 = ""), void 0 === c && (c = {});
      var o = r.useMemo(function() {
        return e({ startTime: null, endTime: null, chars: t2, charsState: new Array(t2.length).fill(0), length: t2.length, currIndex: -1, currChar: "", correctChar: 0, errorChar: 0, phase: 0, skipCurrentWordOnSpace: true, pauseOnError: false, countErrors: "everytime" }, c);
      }, [c, t2]), s = r.useReducer(u, o), i = s[0], l = s[1];
      r.useEffect(function() {
        l({ type: a._ONTEXTCHANGE, payload: o });
      }, [t2, l]);
      var T = r.useCallback(function() {
        switch (i.phase) {
          case n.NotStarted:
            return 0;
          case n.Started:
            return i.startTime ? (/* @__PURE__ */ new Date()).getTime() - i.startTime : 0;
          case n.Ended:
            return i.startTime && i.endTime ? i.endTime - i.startTime : 0;
        }
      }, [i.phase, i.startTime, i.startTime]), E = r.useCallback(function() {
        return l({ type: a.RESET });
      }, [l]), h = r.useCallback(function() {
        return l({ type: a.END });
      }, [l]), p = r.useCallback(function(r2) {
        var e2 = r2 ? r2[0] : null;
        l({ type: a.TYPINGINSERT, payload: e2 });
      }, [l]), d = r.useCallback(function(r2) {
        void 0 === r2 && (r2 = false), l({ type: a.TYPINGDELETE, payload: r2 || false });
      }, [l]), f = r.useCallback(function(r2) {
        return !(r2 < -1 || r2 >= i.length || 2 !== i.phase) && (l({ type: a.SETCURRENTINDEX, payload: r2 }), true);
      }, [l, i.length, i.phase]);
      return { states: i, actions: { getDuration: T, resetTyping: E, endTyping: h, insertTyping: p, deleteTyping: d, setCurrIndex: f } };
    };
  }
});
export default require_dist();
/*! Bundled license information:

react-typing-game-hook/dist/index.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
//# sourceMappingURL=react-typing-game-hook.js.map
